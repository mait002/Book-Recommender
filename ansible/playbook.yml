- name: Deploy Gradio App to EC2
  hosts: gradio_server
  become: yes

  vars:
    app_dir: /home/ubuntu/app
    venv_dir: /home/ubuntu/venv

  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install Python3, pip, and venv
      apt:
        name:
          - python3
          - python3-pip
          - python3-venv
        state: present

    - name: Ensure app directory exists
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Generate .env file from secrets
      template:
        src: env.j2
        dest: "{{ app_dir }}/.env"
        owner: ubuntu
        group: ubuntu
        mode: '0600'

    - name: Copy app files to EC2
      synchronize:
        src: ../app/
        dest: "{{ app_dir }}"
        recursive: yes
        delete: yes

    - name: Create virtual environment
      command: python3 -m venv {{ venv_dir }}
      args:
        creates: "{{ venv_dir }}"

    - name: Install Python dependencies
      pip:
        requirements: "{{ app_dir }}/requirements.txt"
        virtualenv: "{{ venv_dir }}"

    - name: Kill any existing Gradio processes
      shell: |
        pkill -f gradio-dashboard.py || true

    - name: Run Gradio app in background
      shell: |
        set -o allexport
        source .env
        set +o allexport
        nohup {{ venv_dir }}/bin/python3 {{ app_dir }}/gradio-dashboard.py > {{ app_dir }}/gradio.log 2>&1 &
      args:
        chdir: "{{ app_dir }}"

    - name: Wait for Gradio app to start
      wait_for:
        port: 7860
        delay: 5
        timeout: 60
        state: started

    - name: Check if Gradio is running
      shell: pgrep -f gradio-dashboard.py
      register: gradio_pid
      ignore_errors: true

    - debug:
        var: gradio_pid.stdout
